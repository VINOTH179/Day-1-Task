Task-1

1.	Write a blog on the Difference between HTTP1.1 vs HTTP2?

HTTP/1.1: For better understanding, let’s assume the situation when you make a request to the server for the geeksforgeeks.
html page & server responds to you as a resource geeksforgeeks.html page. 
before sending the request and the response there is a TCP connection established between the client & server. 
again, you make a request to the server for an image img.jpg & the server gives a response as an image img.jpg. 
the connection was not lost here after the first request because we add a keep-alive header which is part of the request so there is an open connection between 
the server & client. there is a persistent connection which means several requests & responses are merged in a single connection. 
These are the drawbacks that lead to the creation of HTTP/2: The first problem is HTTP/1.1 transfers all the requests & responses in plain text message form. 
The second one is head-of-line blocking in which the TCP connection is blocked for all other requests until the response does not receive. 
all the information related to the header file is repeated in every request.

HTTP/2: HTTP/2 was developed over the SPDY protocol. HTTP/2 works on the binary framing layer instead of textual which converts all the messages into binary format. 
it works on fully multiplexed that is one TCP connection is used for multiple requests. HTTP/2 uses HPACK which is used to split data from the header. 
it compresses the header. The server sends all the other files like CSS & JS without the request of the client using the PUSH frame.

HTTP/1.1
The uses work on the textual format.
There is head-of-line blocking that blocks all the requests behind it until it doesn’t get its all resources.
It uses requests resources in lining for use getting multiple pages
It compresses data by itself.

HTTP/2
It works on the binary protocol.
It allows multiplexing so one TCP connection is required for multiple requests.
It uses a PUSH frame by the server that collects all multiple pages 
It uses HPACK for data compression.





2.	Write a blog about objects and their internal representation in JavaScript?

Objects, in JavaScript, are its most important data type and form the building blocks for modern JavaScript. 
These objects are quite different from JavaScript’s primitive data types (Number, String, Boolean, null, undefined, and symbol) in the sense that these primitive 
data types all store a single value each (depending on their types).
Objects are more complex and each object may contain any combination of these primitive data types as well as reference data types.
An object is a reference data type. Variables that are assigned a reference value are given a reference or a pointer to that value.
That reference or pointer points to the location in memory where the object is stored. The variables don’t actually store the value.
Loosely speaking, objects in JavaScript may be defined as an unordered collection of related data, of primitive or reference types, in the form of “key: value” pairs.
These keys can be variables or functions and are called properties and methods, respectively, in the context of an object.
For E.g. If your object is a student, it will have properties like name, age, address, id, etc., and methods like updateAddress, updateNam, etc.
